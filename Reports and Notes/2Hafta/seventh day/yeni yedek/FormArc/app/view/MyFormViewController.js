/*
 * File: app/view/MyFormViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyFormViewController', {//********Tanımlamalar bunun içinde olmalı***********
    extend: 'Ext.app.ViewController',
    alias: 'controller.myform',

    onButtonClick: function(button, e, eOpts) {

        //var id = Ext.getCmp('id').getValue();//Değişkenlerin alınması
        var name = Ext.getCmp('name').getValue();
        var lastname = Ext.getCmp('lastname').getValue();
        var isActive;


        var radios = document.getElementsByName('radiogroup');//Radio Group



         for (var i = 0, length = radios.length; i < length; i++)
        {
            if (radios[i].checked)
            {
                // do whatever you want with the checked radio
                console.log('Active');

                isActive = 'Active';

                break;

                // only one radio can be logically checked, don't check the rest
            }else {
                console.log('Passive');

                isActive = 'Passive';

                break;

            }
        }
        console.log(id);
        console.log(name);
        console.log(lastname);

        /*
        Ext.Ajax.request({
    url: 'http://localhost:8080/SpringBootRestApi/api/user/',
    cors: true,
    useDefaultXhrHeader: false,
    withCredentials: true,
    method: 'POST',
    params: {
        'id': '100',
        'name': 'muraaaaTTTTTTTTTT',
        'lastName': 'zazzzzzzzzzzzz',
        'active': 'true'
    },
    success: function(response) {
        var result = Ext.decode(response.responseText);

        if (result && result.success) {

            // Response contain set-cookie which will set the
            // cookie for the next query

            Ext.Ajax.request({
                url: 'https://5.6.7.8/getFiles',
                method: 'GET',
                cors: true,
                useDefaultXhrHeader: false,
                withCredentials: true,
                success: function(response) {
                    var result = Ext.decode(response.responseText);

                    if (result && result.success) {
                       // process files
                    }
                }
            });
        }
    }
}); */

        // Post a user
var url = "http://localhost:8080/SpringBootRestApi/api/user/";

var data = {}
    ;
//data.id = id;
data.name = name;
data.lastName  = lastname;
data.active = isActive;

var json = JSON.stringify(data);

var xhr = new XMLHttpRequest();
xhr.open("POST", url, true);
xhr.setRequestHeader('Content-type','application/json; charset=utf-8');
xhr.onload = function () {
	var user = JSON.parse(xhr.responseText);
	if (xhr.readyState == 4 && xhr.status == "201") {
		console.table(user);
	} else {
		console.error(user);
	}
}
xhr.send(json);


},


    onButtonGetAllClick: function(button, e, eOpts) {
        //window.location = 'http://localhost:8080/SpringBootRestApi/api/user/';
        Ext.Ajax.request({
     url: 'http://localhost:8080/SpringBootRestApi/api/user/',
                method: 'GET',
            headers: { 'Content-Type': 'application/json','Access-Control-Allow-Origin': '*'},

     success: function(response, opts) {
         var obj = Ext.decode(response.responseText);
         console.dir(obj);
     },

     failure: function(response, opts) {
         console.log('server-side failure with status code ' + response.status);
     }
 });

    }


});
